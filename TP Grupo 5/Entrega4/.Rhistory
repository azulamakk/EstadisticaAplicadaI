p2=c()
for(i in 2:(nk-1)){
p2=c(p2,pt(ls[i],df=2)-pt(li[i],df=2))
}
p2
pt(li[2],df=2)
p2=c(pt(li[2],df=2),p2)
p2[nk]=1-sum(p2)
p2
fe_t=p2*228
fe_t
w_t=sum(((fa-fe_t)^2)/fe_t)
#Calculo p-valor
pvalort=1-pchisq(w_t,df=nk-2)
pvalorn=1-pchisq(w_n,df=nk-2)
pvalort
pvalorn
par(mfrow = c(2, 1), mar = c(2,2,2,2))
plot(qempiricos, qteoricos_N01, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, ldw = 3, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
plot(qempiricos, qteoricos_t, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, ldw = 3, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
par(mfrow = c(2, 1), mar = c(2,2,2,2))
plot(qempiricos, qteoricos_N01, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, ldw = 3, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
plot(qempiricos, qteoricos_t, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, ldw = 3, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
par(mfrow = c(2, 1), mar = c(2,2,2,2))
plot(qempiricos, qteoricos_N01, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, ldw = 3, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
plot(qempiricos, qteoricos_t, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, ldw = 3, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
par(mfrow = c(2, 1), mar = c(2,2,2,2))
plot(qempiricos, qteoricos_N01, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, ldw = 3, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
plot(qempiricos, qteoricos_t, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, ldw = 3, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
par(mfrow = c(2, 1), mar = c(2,2,2,2))
plot(qempiricos, qteoricos_N01, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, ldw = 3, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
plot(qempiricos, qteoricos_t, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, ldw = 3, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
par(mfrow = c(2, 1), mar = c(2,2,2,2))
plot(qempiricos, qteoricos_N01, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, ldw = 3, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
plot(qempiricos, qteoricos_t, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, ldw = 3, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
plot(qempiricos, qteoricos_t, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
plot(qempiricos, qteoricos_t, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
plot(qempiricos, qteoricos_t, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
plot(qempiricos, qteoricos_t, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
plot(qempiricos, qteoricos_t, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
plot(qempiricos, qteoricos_t, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
plot(qempiricos, qteoricos_t, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
plot(qempiricos, qteoricos_t, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
par(mfrow = c(2, 1), mar = c(2,2,2,2))
plot(qempiricos, qteoricos_N01, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
plot(qempiricos, qteoricos_t, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
hist(t,freq=FALSE)
hist(t,freq=FALSE)$breaks #devuelve los puntos de corte
hist(t,freq=FALSE)$counts #necesito
m=log(x_raya/(sqrt(1+(sd(E)/x_raya)^2)))
m
d2=log(1+(sd(E)/x_raya)^2)
d2
t=(E-x_raya)/sd(E)
t=(E-x_raya)/sd(E)
t
logverosimilitudnormal
logverosimilitudt
qempiricos = sort(t)
n = length(E)
femp = 1:n/(n+1)
# Calculo de cuantiles teoricos con la Normal(0,1)
qteoricos_N01 = qnorm(femp)
# Calculo de cuantiles teoricos con la t de Student
qteoricos_t = qt(femp, 2)
# Calculamos la funcion empirica
qempiricos = sort(t)
n = length(E)
femp = 1:n/(n+1)
# Calculo de cuantiles teoricos con la Normal(0,1)
qteoricos_N01 = qnorm(femp)
qteoricos_N01
# Calculo de cuantiles teoricos con la t de Student
qteoricos_t = qt(femp, 2)
qteoricos_t
qteoricos_t
# Grafico
par(mfrow = c(2, 1), mar = c(2,2,2,2))
plot(qempiricos, qteoricos_N01, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
qteoricos_t = qt(femp, 2)
qteoricos_t
femp = 1:n/(n+1)
femp = 1:n/(n+1)
femp
par(mfrow = c(2, 1), mar = c(2,2,2,2))
plot(qempiricos, qteoricos_N01, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
plot(qempiricos, qteoricos_t, pch = 20, col = 'maroon4')
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
par(mfrow = c(2, 1), mar = c(2,2,2,2))
plot(qempiricos, qteoricos_N01, main= 'Cuantiles Teoricos con Normal(0,1)',pch = 20, col = 'maroon4')
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
plot(qempiricos, qteoricos_t, main= 'Cuantiles Teoricos con Normal(0,1)', pch = 20, col = 'maroon4')
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
plot(qempiricos, qteoricos_t, main= 'Cuantiles Teoricos con t-student', pch = 20, col = 'maroon4')
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
# Grafico
par(mfrow = c(2, 1), mar = c(2,2,2,2))
plot(qempiricos, qteoricos_N01, main= 'Cuantiles Teoricos con Normal(0,1)',pch = 20, col = 'maroon4')
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
plot(qempiricos, qteoricos_t, main= 'Cuantiles Teoricos con t-student', pch = 20, col = 'maroon4')
abline(a = 0, b = 1, lty = 3)
abline(a = 0, b = 0)
abline(v = 0)
hist(t,freq=FALSE)
hist(t, breaks = 20,freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t, breaks = 20, ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t, breaks = 20, main = "Frencuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t, breaks = 20, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t,freq=FALSE)$breaks #devuelve los puntos de corte
hist(t,freq=FALSE)$breaks #devuelve los puntos de corte
hist(t,freq=FALSE)$counts #necesito
#este vector va a tener las frecuencias absolutas observadas
fa= c(hist(t)$counts[1:6],11)
hist(t,freq=FALSE)$breaks #devuelve los puntos de corte
hist(t,freq=FALSE)$breaks #devuelve los puntos de corte
hist(t, breaks = 20, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t,freq=FALSE)$breaks #devuelve los puntos de corte
hist(t, breaks = 20, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t,freq=FALSE)$breaks
hist(t, breaks = 20, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t,freq=FALSE)$breaks
hist(t, breaks = 20, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t,freq=FALSE)$breaks
hist(t, breaks = 20, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t,freq=FALSE)$breaks
hist(t, breaks = 20, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t,freq=FALSE)$breaks
hist(t, breaks = 14, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t,freq=FALSE)$breaks #devuelve los puntos de corte
hist(t,freq=FALSE)$counts #necesito
hist(t, breaks = 14, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t,freq=FALSE)$breaks #devuelve los puntos de corte
hist(t,freq=FALSE)$counts #necesito
hist(t, breaks = 14, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t,freq=FALSE)$breaks #devuelve los puntos de corte
hist(t,freq=FALSE)$counts #necesito
hist(t, breaks = 14, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t,freq=FALSE)$breaks #devuelve los puntos de corte
hist(t,freq=FALSE)$counts #necesito
hist(t, breaks = 14, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t, breaks = 14, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t, breaks = 14, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))$breaks #devuelve los puntos de corte
hist(t, breaks = 14, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))$counts #necesito
fa= c(hist(t)$counts[1:6],11)
fa
nk= length(fa)
nk
length(E)
nk= length(fa)
nk
length(E)
nk= length(fa)
nk
length(E)
nk= length(fa)
nk
nk= length(fa)
nk
hist(t, breaks = 7, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t, breaks = 7, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))$breaks #devuelve los puntos de corte
hist(t, breaks = 7, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))$counts #necesito
hist(t, breaks = 40, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t, breaks = 21, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t, breaks = 21, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))$counts #necesito
hist(t, breaks = 200, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t, breaks = 14, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t, breaks = 14, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))$breaks #devuelve los puntos de corte
hist(t, breaks = 14, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))$counts #necesito
#cantidad de clases
nk= length(fa)
nk
length(E)
hist(t, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))
hist(t, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))$counts #necesito
hist(t, main = "Frecuencia de parametros de t", ylab = "Frecuencia", freq=FALSE, col = hcl.colors(20, palette = 'viridis'))$breaks #devuelve los puntos de corte
#Aca elijo la distribucion
#para la probabilidad tendria que estimar los parametros o poner los que dije en la hipotesis nula
p=c()
for(i in 2:(nk-1)){
p=c(p,pnorm(ls[i])-pnorm(li[i]))
}
p
pnorm(li[2])
p=c(pnorm(li[2]),p)
p[nk]=1-sum(p)
p
#Aca elijo la distribucion
#para la probabilidad tendria que estimar los parametros o poner los que dije en la hipotesis nula
p=c()
for(i in 2:(nk-1)){
p=c(p,pnorm(ls[i])-pnorm(li[i]))
}
p
pnorm(li[2])
p=c(pnorm(li[2]),p)
p[nk]=1-sum(p)
p
fe_n
fe_n
for(i in 2:(nk-1)){
p=c(p,pnorm(ls[i])-pnorm(li[i]))
}
p
pnorm(li[2])
p=c(pnorm(li[2]),p)
p[nk]=1-sum(p)
p
fe_n=p*228
fe_n
w_n=sum(((fa-fe_n)^2)/fe_n)
p=c()
for(i in 2:(nk-1)){
p=c(p,pnorm(ls[i])-pnorm(li[i]))
}
p
pnorm(li[2])
p=c(pnorm(li[2]),p)
p[nk]=1-sum(p)
p
fe_n=p*228
fe_n
w_n=sum(((fa-fe_n)^2)/fe_n)
w_n
p2=c()
for(i in 2:(nk-1)){
p2=c(p2,pt(ls[i],df=2)-pt(li[i],df=2))
}
p2
pt(li[2],df=2)
p2=c(pt(li[2],df=2),p2)
p2[nk]=1-sum(p2)
p2
fe_t=p2*228
fe_t
w_t=sum(((fa-fe_t)^2)/fe_t)
w_t
pvalort=1-pchisq(w_t,df=nk-2)
pvalorn=1-pchisq(w_n,df=nk-2)
pvalort
pvalorn
pvalort
pvalorn
pvalort
pvalorn
pvalort
pvalorn
pvalort
pvalorn
pvalort=1-pchisq(w_t,df)
pvalort=1-pchisq(w_t,df)
df <- nk-1
#Calculo p-valor
pvalort=1-pchisq(w_t,df)
pvalorn=1-pchisq(w_n,df)
df <- nk-1
#Calculo p-valor
pvalort=1-pchisq(w_t,df)
pvalorn=1-pchisq(w_n,df)
df <- nk-1
#Calculo p-valor
pvalort=1-pchisq(w_t,df)
pvalorn=1-pchisq(w_n,df)
df <- nk-1
#Calculo p-valor
pvalort=1-pchisq(w_t,df)
pvalorn=1-pchisq(w_n,df)
pvalort
pvalorn
df <- nk-1
#Calculo p-valor
pvalort=1-pchisq(w_t,df)
pvalorn=1-pchisq(w_n,df)
pvalort
pvalorn
df <- nk-1
#Calculo p-valor
pvalort=1-pchisq(w_t,df)
pvalorn=1-pchisq(w_n,df)
pvalort
pvalorn
pvalort=1-pchisq(w_t,df, lower.tail = TRUE, log.p = FALSE)
pvalorn=1-pchisq(w_n,df)
pvalort
pvalorn
pvalort=1-pchisq(w_t,df, lower.tail = TRUE, log.p = FALSE)
pvalorn=1-pchisq(w_n,df)
pvalort
pvalorn
pvalort=1-pchisq(w_t,df, lower.tail = TRUE, log.p = FALSE)
pvalorn=1-pchisq(w_n,df)
pvalort
pvalorn
pvalort=1-pchisq(w_t,df, lower.tail = TRUE, log.p = FALSE)
pvalorn=1-pchisq(w_n,df)
pvalort
pvalorn
pvalort=1-pchisq(w_t,df, lower.tail = TRUE, log.p = FALSE)
pvalorn=1-pchisq(w_n,df, lower.tail = TRUE, log.p = FALSE)
pvalort
pvalorn
pvalort=1-pchisq(w_t,df, lower.tail = TRUE, log.p = FALSE)
pvalorn=1-pchisq(w_n,df, lower.tail = TRUE, log.p = FALSE)
pvalort
pvalorn
df <- nk-1
#Calculo p-valor
pvalort=1-pchisq(w_t,df, lower.tail = TRUE, log.p = FALSE)
pvalorn=pchisq(w_n,df, lower.tail = TRUE, log.p = FALSE)
pvalort
pvalorn
df <- nk-1
#Calculo p-valor
pvalort=1-pchisq(w_t,df, lower.tail = TRUE, log.p = FALSE)
pvalorn=pchisq(w_n,df, lower.tail = TRUE, log.p = FALSE)
pvalort
pvalorn
df <- nk-1
#Calculo p-valor
pvalort=1-pchisq(w_t,df, lower.tail = TRUE, log.p = FALSE)
pvalorn=pchisq(w_n,df, lower.tail = TRUE, log.p = FALSE)
pvalort
pvalorn
df <- nk-1
#Calculo p-valor
pvalort=1-pchisq(w_t,df, lower.tail = TRUE, log.p = FALSE)
pvalorn=pchisq(w_n,df, lower.tail = TRUE, log.p = FALSE)
pvalort
pvalorn
df <- nk-1
#Calculo p-valor
pvalort=1-pchisq(w_t,df, lower.tail = TRUE, log.p = FALSE)
pvalorn=1-pchisq(w_n,df, lower.tail = TRUE, log.p = FALSE)
pvalort
pvalorn
pvalort=1-pchisq(w_t,df, lower.tail = TRUE, log.p = FALSE)
pvalorn=1-pchisq(w_n,df, ncp = 0, lower.tail = TRUE, log.p = FALSE)
pvalort
pvalorn
pvalort=1-pchisq(w_t,df, lower.tail = TRUE, log.p = FALSE)
pvalorn=1-pchisq(w_n,df, ncp = 0, lower.tail = TRUE, log.p = FALSE)
pvalort
pvalorn
pvalort=1-pchisq(w_t,df, lower.tail = TRUE, log.p = FALSE)
pvalorn=1-pchisq(w_n,df, ncp = 0, lower.tail = TRUE, log.p = FALSE)
pvalort
pvalorn
pvalort=1-pchisq(w_t,df, lower.tail = TRUE, log.p = FALSE)
pvalorn=1-pchisq(w_n,df, ncp = 0, lower.tail = TRUE, log.p = FALSE)
pvalort
pvalorn
pvalort=1-pchisq(w_t,df, ncp = 0, lower.tail = TRUE, log.p = FALSE)
pvalorn=1-pchisq(w_n,df, ncp = 0, lower.tail = TRUE, log.p = FALSE)
pvalort
pvalorn
w_t
#Calculo p-valor
pvalort=1-pchisq(sum((fa-fe_t)^2/fe_t),df)
#Calculo p-valor
pvalort=1-pchisq(sum((fa-fe_t)^2/fe_t),df)
pvalorn=1-pchisq(w_n,df, ncp = 0, lower.tail = TRUE, log.p = FALSE)
pvalort
#Calculo p-valor
pvalort=1-pchisq(sum((fa-fe_t)^2/fe_t),df)
pvalorn=1-pchisq(w_n,df, ncp = 0, lower.tail = TRUE, log.p = FALSE)
pvalort
#Calculo p-valor
pvalort=1-pchisq(sum((fa-fe_t)^2/fe_t),df)
pvalorn=1-pchisq(w_n,df, ncp = 0, lower.tail = TRUE, log.p = FALSE)
pvalort
#Calculo p-valor
pvalort=1-pchisq(sum((fa-fe_t)^2/fe_t),df)
pvalorn=1-pchisq(w_n,df, ncp = 0, lower.tail = TRUE, log.p = FALSE)
pvalort
#Calculo p-valor
pvalort=1-pchisq(sum((fa-fe_t)^2/fe_t),df)
pvalorn=1-pchisq(w_n,df, ncp = 0, lower.tail = TRUE, log.p = FALSE)
pvalort
#Calculo p-valor
pvalort=1-pchisq(sum((fa-fe_t)^2/fe_t),df)
pvalorn=1-pchisq(w_n,df, ncp = 0, lower.tail = TRUE, log.p = FALSE)
pvalort
#Calculo p-valor
pvalort=1-pchisq(sum((fa-fe_t)^2/fe_t),df)
pvalorn=1-pchisq(w_n,df, ncp = 0, lower.tail = TRUE, log.p = FALSE)
pvalort
#Calculo p-valor
pvalort=1-pchisq(sum((fa-fe_t)^2/fe_t),df)
pvalorn=1-pchisq(w_n,df, ncp = 0, lower.tail = TRUE, log.p = FALSE)
pvalort
#Calculo p-valor
pvalort=1-pchisq(sum((fa-fe_t)^2/fe_t),df)
pvalorn=1-pchisq(w_n,df, ncp = 0, lower.tail = TRUE, log.p = FALSE)
pvalort
w_t
df <- nk-1
#Calculo p-valor
pvalort=1-pchisq(sum((fa-fe_t)^2/fe_t),df)
pvalorn=1-pchisq(w_n,df, ncp = 0, lower.tail = TRUE, log.p = FALSE)
w_t
x <- c(  1 , 0.1 , 0.2 , 4.6 , 2.7 , 1.2 , 0.3 , 3.2 , 3.7 , 7.7 , 0.7 , 5.4 , 10.2 , 1.2 , 5.6 , 0.8 , 9.6 , 2.5 , 13.3 , 0.4 , 8.5 , 0.7 , 7.9 , 5.3 , 0.5)
x
x <- c(  1 , 0.1 , 0.2 , 4.6 , 2.7 , 1.2 , 0.3 , 3.2 , 3.7 , 7.7 , 0.7 , 5.4 , 10.2 , 1.2 , 5.6 , 0.8 , 9.6 , 2.5 , 13.3 , 0.4 , 8.5 , 0.7 , 7.9 , 5.3 , 0.5)
x
length(x)
mean(x)
suma/25
suma <- sum(x)
suma/25
sd(x)
mean(x)
sd(x)
mean(x)
q3x = quantile(x, 0.5, type=1)
q3x
hist(x)
